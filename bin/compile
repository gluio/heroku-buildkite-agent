#!/bin/bash
BUILDPACK_PATH="`dirname \"$0\"`/.."
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
PROFILE_DIR="$BUILD_DIR/.profile.d"

export_env_dir() {
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$ENV_DIR" ]; then
    for e in $(ls $ENV_DIR); do
      echo "$e" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $ENV_DIR/$e)"
      :
    done
  fi
}

source_profiles() {
  if [ -d "$PROFILE_DIR" ]; then
    for p in $(ls $PROFILE_DIR); do
      echo "Sourcing profile $PROFILE_DIR/$p"
      source $PROFILE_DIR/$p
    done
  fi
}

export_env_dir
export HOME="$BUILD_DIR"
export PATH="$BUILD_DIR/bin:$PATH"
source_profiles
export BUILDKITE_BOOTSTRAP_SCRIPT_PATH="$BUILDPACK_PATH/etc/bootstrap.sh"
export BUILDKITE_HOOKS_PATH="$BUILDPACK_PATH/hooks"
export BUILDKITE_BUILD_PATH=$BUILD_DIR
export BUILDKITE_AGENT_META_DATA="heroku=true"
export BUILDKITE_AGENT_PRIORITY="100"
if [ ! -z "$SOURCE_VERSION" ]; then
  export BUILDKITE_AGENT_META_DATA="$BUILDKITE_AGENT_META_DATA,sha=$SOURCE_VERSION";
fi
if [ ! -z "$APP_NAME" ]; then
  export BUILDKITE_AGENT_META_DATA="$BUILDKITE_AGENT_META_DATA,appname=$APP_NAME";
else
  echo "ERROR: Need to set APP_NAME config var so that we can tell Buildkite to"
  echo "       only target this agent for builds."
  exit 1
fi

cd $BUILD_DIR

echo $(ls -al $BUILDPACK_PATH/bin/buildkite-agent)
$BUILDPACK_PATH/bin/buildkite-agent start
